@model Project.Models.PublicationCreateViewModel

<script src="@Url.Content("~/Scripts/tinymce/tinymce.min.js")"></script>

@using (Html.BeginForm("Create", "Publications", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-sm-8">
            <h2>Nova Publicação</h2>
        </div>
        <div class="col-sm-4" style="padding-top:3%;padding-bottom:2%;">
            <div class="pull-right">
                <button type="submit" value="Create" class="btn btn-primary">Criar</button>
                @Html.ActionLink("Voltar às publicações", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8 col-md-10">
            <div class="container-fluid row">
                <div class="col-xs-12">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>

                @* Title *@
                <div class="col-xs-12">
                    <div class="row">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 text-right", id="crtTitle" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Image *@
                <div class="col-xs-12">
                    <div class="row">
                        <label class="control-label col-md-3 text-right">Imagem da Publicação</label>
                        <div class="col-md-9">
                            <img class="img-responsive" style="max-height:400px;" id="imgPreview" src="" hidden />
                            @Html.TextBox("file", "", new { type = "file", onchange = "loadFile(event)" })
                        </div>
                    </div>
                </div>
                @* Resume *@
                <div class="col-xs-12">
                    <div class="row">
                        @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Resume, new { @class = "form-control" , @style = "height:200px" })
                            @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Description *@
                <div class="col-xs-12">
                    <div class="row">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id="richtext", @style = "height:400px" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <script>tinymce.init({
                        selector: '#richtext',
                        statusbar: false,
                        menubar: false,
                        toolbar: 'fontselect fontsizeselect | bold italic underline | subscript superscript | forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist | hr table link charmap | print preview',
                        plugins: 'link colorpicker textcolor print lists preview hr table charmap',
                        skin: 'lightgray'
                    });
                </script>
                @* EVENT *@
                <div class="col-xs-12">
                    <div class="row">
                        @Html.LabelFor(model => model.IsEvent, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            <label data-toggle="collapse" data-target=".collapseEvent">
                                @Html.CheckBoxFor(model => model.IsEvent, new { @class = "form-control", @style = "width:0;" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsEvent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Day *@
                <div class="col-xs-12 collapseEvent collapse">
                    <div class="row">
                        @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Day, new { @class = "form-control", @id= "form_datetime" })
                            @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Local *@
                <div class="col-xs-12 collapseEvent collapse">
                    <div class="row">
                        @Html.LabelFor(model => model.Local, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Local, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Local, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* POLL *@
                <div class="col-xs-12">
                    <div class="row">
                        @Html.LabelFor(model => model.IsPoll, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            <label data-toggle="collapse" data-target=".collapsePoll">
                                @Html.CheckBoxFor(model => model.IsPoll, new { @class = "form-control", @style = "width:0;" })
                            </label>
                            @Html.ValidationMessageFor(model => model.IsPoll, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Matter *@
                <div class="col-xs-12 collapsePoll collapse">
                    <div class="row">
                        @Html.LabelFor(model => model.Matter, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Matter, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Matter, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Form *@
                <div class="col-xs-12 collapsePoll collapse">
                    <div class="row">
                        @Html.LabelFor(model => model.LinkToForm, htmlAttributes: new { @class = "col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.LinkToForm, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LinkToForm, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* IsVisible *@
                <div class="col-xs-12 collapsePoll collapse">
                    <div class="row">
                        @Html.LabelFor(model => model.IsVisible, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.CheckBoxFor(model => model.IsVisible, new { @class = "form-control", @style = "width:0;" })
                            @Html.ValidationMessageFor(model => model.IsVisible, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* IsInclusive *@
                <div class="col-xs-12 collapsePoll collapse">
                    <div class="row">
                        @Html.LabelFor(model => model.IsInclusive, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            @Html.CheckBoxFor(model => model.IsInclusive, new { @class = "form-control", @style = "width:0;" })
                            @Html.ValidationMessageFor(model => model.IsInclusive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @* Options *@
                <div class="col-xs-12 collapsePoll collapse">
                    <div class="row">
                        @Html.LabelFor(model => Model.OptionName, htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-9">
                            <div class="row" id="options"></div>
                            <a id="btnAddOption" onclick="addOption()" class="btn btn-default">Adicionar Opção</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-2"></div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $("#form_datetime").datetimepicker({ format: 'yyyy-mm-dd hh:ii' });
    var optionID = 0;
</script>
